{"ast":null,"code":"var _jsxFileName = \"/Users/stellabullo/Desktop/learning/SheCodes/react/react-app-weather/react-app-weather/src/WeatherTemperature.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherTemperature(props) {\n  function convertToFahrenheit() {\n    let fahrenheit = props.temperature * (9 / 5) + 32;\n    let roundedFahrenheit = Math.round(fahrenheit);\n    return roundedFahrenheit;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" d-flex \",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"temperature \",\n      children: [Math.round(props.celsius), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"unit\",\n      children: \"\\xB0C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: [\"The temperature in \", props.city, \" is \", props.temperature, \"\\xB0C and\", \" \", convertToFahrenheit(), \"\\xB0F\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherTemperature;\nvar _c;\n$RefreshReg$(_c, \"WeatherTemperature\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherTemperature","props","convertToFahrenheit","fahrenheit","temperature","roundedFahrenheit","Math","round","className","children","celsius","fileName","_jsxFileName","lineNumber","columnNumber","city","_c","$RefreshReg$"],"sources":["/Users/stellabullo/Desktop/learning/SheCodes/react/react-app-weather/react-app-weather/src/WeatherTemperature.js"],"sourcesContent":["import React from \"react\";\n\nexport default function WeatherTemperature(props) {\n  function convertToFahrenheit() {\n    let fahrenheit = props.temperature * (9 / 5) + 32;\n    let roundedFahrenheit = Math.round(fahrenheit);\n    return roundedFahrenheit;\n  }\n  return (\n    <div className=\" d-flex \">\n      <span className=\"temperature \">{Math.round(props.celsius)} </span>\n      <span className=\"unit\">°C</span>\n    </div>\n  );\n  return (\n    <div className=\"Weather\">\n      The temperature in {props.city} is {props.temperature}°C and{\" \"}\n      {convertToFahrenheit()}°F\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAChD,SAASC,mBAAmBA,CAAA,EAAG;IAC7B,IAAIC,UAAU,GAAGF,KAAK,CAACG,WAAW,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;IACjD,IAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;IAC9C,OAAOE,iBAAiB;EAC1B;EACA,oBACEN,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAMS,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAEH,IAAI,CAACC,KAAK,CAACN,KAAK,CAACS,OAAO,CAAC,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClEf,OAAA;MAAMS,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;EAER,oBACEf,OAAA;IAAKS,SAAS,EAAC,SAAS;IAAAC,QAAA,GAAC,qBACJ,EAACR,KAAK,CAACc,IAAI,EAAC,MAAI,EAACd,KAAK,CAACG,WAAW,EAAC,WAAM,EAAC,GAAG,EAC/DF,mBAAmB,CAAC,CAAC,EAAC,OACzB;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACE,EAAA,GAlBuBhB,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}